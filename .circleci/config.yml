# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:9.5
        environment:
          POSTGRES_USER: postgres
      - image: circleci/mariadb
        environment:
          MYSQL_ROOT_PASSWORD: test1234

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      # for check in circle
      IS_CIRCLE_CI: true

    steps:
      - checkout

      # wait for db
      # see: https://circleci.com/docs/2.0/databases/
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for mariadb
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6
      - run: sudo apt-get install mysql-client
      - run: ./init-db.sh

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: ./gradlew check
      - run: ./gradlew jacocoTestReport
      # send coverage report
      - run: bash <(curl -s https://codecov.io/bash)
      - run: ./integration-test.sh



